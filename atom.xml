<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[海贼的少年]]></title>
  <link href="http://xiaojian.me/atom.xml" rel="self"/>
  <link href="http://xiaojian.me/"/>
  <updated>2013-11-22T23:39:34+08:00</updated>
  <id>http://xiaojian.me/</id>
  <author>
    <name><![CDATA[海贼的少年]]></name>
    <email><![CDATA[niubijian2007@126.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[for陈小欢同学]]></title>
    <link href="http://xiaojian.me/blog/2013/11/22/forchen-xiao-huan-tong-xue/"/>
    <updated>2013-11-22T22:06:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/22/forchen-xiao-huan-tong-xue</id>
    <content type="html"><![CDATA[<p>欢欢同学：</p>

<p>两日前不经意间看到你的帖子，便被你温暖的笑容吸引，后面接触了一下，真的是一个非常不错的姑娘，提笔写下这封信，如若言语不当，还望海涵。</p>

<p>我生于88年10月，来自江苏盐都，家庭温馨，父母开明。
07年求学于北方某211大学读本科，计算机专业，毕业后在北京一家互联网公司做着喜欢的程序员工作，在北京工作生活了两年，虽然孤独，却也很有收获。</p>

<p>想念家乡的好山好水，还有一帮子小伙伴，还是决定离开北京，告别同事，来到上海。也是在一家互联网工作做技术工作，打算在这里有个家，不再漂泊流浪~</p>

<p>我性格随和开朗，没有抽烟网游的不良嗜好，偶尔少喝点酒，业余时间喜欢读书、写字，找朋友去附近的城市溜达，乐在一起。</p>

<p>我心中的爱情是择一城终老，遇一人白首的简单幸福，是困难时互相鼓励关心前进的温馨，也是互相善待彼此家人的责任与体贴。</p>

<p>附上一些近照：</p>

<p><img src="http://s3.t.itc.cn/mblog/pic/201311_22_23/a838i07114709537488.jpg" alt="大四毕业" /></p>

<p><img src="http://s3.t.itc.cn/mblog/pic/201311_22_22/b6ati22472993076739.jpg" alt="浙江某小岛" /></p>

<p><img src="http://s2.t.itc.cn/mblog/pic/201311_22_23/a032106988554192488.jpg" alt="愣头愣脑证件照" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux下修改ulimit设置的最大进程数]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/linuxxia-xiu-gai-ulimitshe-zhi-de-zui-da-jin-cheng-shu/"/>
    <updated>2013-11-12T18:45:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/linuxxia-xiu-gai-ulimitshe-zhi-de-zui-da-jin-cheng-shu</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>shell&gt; ulimit -a
</span><span class='line'>core file size          (blocks, -c) 0
</span><span class='line'>data seg size           (kbytes, -d) unlimited
</span><span class='line'>scheduling priority             (-e) 0
</span><span class='line'>file size               (blocks, -f) unlimited
</span><span class='line'>pending signals                 (-i) 1031976
</span><span class='line'>max locked memory       (kbytes, -l) 64
</span><span class='line'>max memory size         (kbytes, -m) unlimited
</span><span class='line'>open files                      (-n) 102400
</span><span class='line'>pipe size            (512 bytes, -p) 8
</span><span class='line'>POSIX message queues     (bytes, -q) 819200
</span><span class='line'>real-time priority              (-r) 0
</span><span class='line'>stack size              (kbytes, -s) 10240
</span><span class='line'>cpu time               (seconds, -t) unlimited
</span><span class='line'>max user processes              (-u) 1024
</span><span class='line'>virtual memory          (kbytes, -v) unlimited
</span><span class='line'>file locks                      (-x) unlimited</span></code></pre></td></tr></table></div></figure>


<p>max user processes 系统的进程数上限</p>

<p>需要修改下面文件和目录的配置内容：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/security/limits.conf
</span><span class='line'>/etc/security/limits.d/</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[犯了很二逼的java语法错误]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/fan-liao-hen-er-bi-de-javayu-fa-cuo-wu/"/>
    <updated>2013-11-12T18:44:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/fan-liao-hen-er-bi-de-javayu-fa-cuo-wu</id>
    <content type="html"><![CDATA[<p>错误：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>private static HTablePool pool = new HTablePool(configuration, 1000);
</span><span class='line'>
</span><span class='line'>  static {
</span><span class='line'>
</span><span class='line'>        configuration = HBaseConfiguration.create();
</span><span class='line'>
</span><span class='line'>        configuration.set("hbase.zookeeper.property.clientPort", "2181");
</span><span class='line'>
</span><span class='line'>        configuration.set("hbase.zookeeper.quorum", "182.18.24.31,182.18.24.32,182.18.24.37");
</span><span class='line'>
</span><span class='line'>        configuration.set("hbase.master", "182.18.24.31:60000");
</span><span class='line'>
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>在当前类每个成员方法中直接使用pool.get()</span></code></pre></td></tr></table></div></figure>


<p>修正：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  static {
</span><span class='line'>
</span><span class='line'>        configuration = HBaseConfiguration.create();
</span><span class='line'>
</span><span class='line'>        configuration.set("hbase.zookeeper.property.clientPort", "2181");
</span><span class='line'>
</span><span class='line'>        configuration.set("hbase.zookeeper.quorum", "182.18.24.31,182.18.24.32,182.18.24.37");
</span><span class='line'>
</span><span class='line'>        configuration.set("hbase.master", "182.18.24.31:60000");
</span><span class='line'>
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<p>在当前类每个成员方法中使用pool，pool不可以作为静态成员变量使用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> HTablePool pool = new HTablePool(configuration, 1000);</span></code></pre></td></tr></table></div></figure>


<p>得到的结论：</p>

<p>我们暂且先不看这道题，先回忆一下代码块、构造函数执行顺序的基本知识：</p>

<p>总体规则：静态代码块 &ndash;> 动态代码块 &ndash;>构造函数</p>

<p>静态代码块只在第一次new的时候执行一次，之后不再执行；</p>

<p>动态代码块在每次new的时候都执行一次。</p>

<p>在不涉及继承的情况下：</p>

<p>1.静态代码块和静态成员变量在加载代码时执行，只执行一次，按照它们出现的顺序先后执行；</p>

<p>2.动态代码块在每次实例化对象时执行，在构造函数之前执行，多个动态代码块按照它们出现的顺序先后执行；</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[maven插件assembly打包]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/mavencha-jian-assemblyda-bao/"/>
    <updated>2013-11-12T18:42:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/mavencha-jian-assemblyda-bao</id>
    <content type="html"><![CDATA[<p>maven assembly 插件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  &lt;plugin&gt;
</span><span class='line'>                &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;
</span><span class='line'>                &lt;version&gt;2.2&lt;/version&gt;
</span><span class='line'>                &lt;configuration&gt;
</span><span class='line'>                    &lt;descriptors&gt;
</span><span class='line'>                        &lt;descriptor&gt;distribution.xml&lt;/descriptor&gt;
</span><span class='line'>                    &lt;/descriptors&gt;
</span><span class='line'>                &lt;/configuration&gt;
</span><span class='line'>                &lt;executions&gt;
</span><span class='line'>                    &lt;execution&gt;
</span><span class='line'>                        &lt;id&gt;make-assembly&lt;/id&gt;
</span><span class='line'>                        &lt;phase&gt;package&lt;/phase&gt;
</span><span class='line'>                    &lt;/execution&gt;
</span><span class='line'>                &lt;/executions&gt;
</span><span class='line'> &lt;/plugin&gt;</span></code></pre></td></tr></table></div></figure>


<p>distribution.xml:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;assembly&gt;
</span><span class='line'>    &lt;id&gt;dist&lt;/id&gt;
</span><span class='line'>    &lt;formats&gt;
</span><span class='line'>        &lt;format&gt;zip&lt;/format&gt;
</span><span class='line'>    &lt;/formats&gt;
</span><span class='line'>    &lt;includeBaseDirectory&gt;false&lt;/includeBaseDirectory&gt;
</span><span class='line'>    &lt;dependencySets&gt;
</span><span class='line'>        &lt;dependencySet&gt;
</span><span class='line'>            &lt;outputDirectory&gt;lib&lt;/outputDirectory&gt;
</span><span class='line'>            &lt;scope&gt;runtime&lt;/scope&gt;
</span><span class='line'>        &lt;/dependencySet&gt;
</span><span class='line'>    &lt;/dependencySets&gt;
</span><span class='line'>    &lt;fileSets&gt;
</span><span class='line'>        &lt;fileSet&gt;
</span><span class='line'>            &lt;directory&gt;${project.basedir}/src/main/resources&lt;/directory&gt;
</span><span class='line'>            &lt;outputDirectory&gt;config&lt;/outputDirectory&gt;
</span><span class='line'>            &lt;includes&gt;
</span><span class='line'>                &lt;include&gt;log4j.properties&lt;/include&gt;
</span><span class='line'>            &lt;/includes&gt;
</span><span class='line'>        &lt;/fileSet&gt;
</span><span class='line'>    &lt;/fileSets&gt;
</span><span class='line'>&lt;/assembly&gt;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[log4j配置的例子]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/log4jpei-zhi-de-li-zi/"/>
    <updated>2013-11-12T18:42:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/log4jpei-zhi-de-li-zi</id>
    <content type="html"><![CDATA[<p>log4j配置:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Root logger option
</span><span class='line'>log4j.rootLogger=INFO,stdout,file,error
</span><span class='line'>Direct log messages to stdout
</span><span class='line'>log4j.appender.stdout=org.apache.log4j.ConsoleAppender
</span><span class='line'>log4j.appender.stdout.Target=System.out
</span><span class='line'>log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
</span><span class='line'>log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
</span><span class='line'>log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
</span><span class='line'>log4j.appender.file.File=${logDir}/log4j.log
</span><span class='line'>log4j.appender.file.layout=org.apache.log4j.PatternLayout
</span><span class='line'>log4j.appender.file.Append=true
</span><span class='line'>log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p %c{3}.%M(%L)&lt;%t&gt;- %m%n
</span><span class='line'>log4j.appender.file.Threshold=INFO
</span><span class='line'>log4j.appender.error=org.apache.log4j.DailyRollingFileAppender
</span><span class='line'>log4j.appender.error.File=${logDir}/log4j.error
</span><span class='line'>log4j.appender.error.layout=org.apache.log4j.PatternLayout
</span><span class='line'>log4j.appender.error.Append=true
</span><span class='line'>log4j.appender.error.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p %c{3}.%M(%L)&lt;%t&gt;- %m%n
</span><span class='line'>log4j.appender.error.Threshold=ERROR</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HBase的OOM问题]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/hbasede-oomwen-ti/"/>
    <updated>2013-11-12T18:41:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/hbasede-oomwen-ti</id>
    <content type="html"><![CDATA[<p>HBase OOM 问题：</p>

<p>出错堆栈：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Exception in thread "main" java.lang.OutOfMemoryError: unable to create new native thread
</span><span class='line'>at java.lang.Thread.start0(Native Method)
</span><span class='line'>at java.lang.Thread.start(Thread.java:693)
</span><span class='line'>at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:949)
</span><span class='line'>at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1360)
</span><span class='line'>at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:132)
</span><span class='line'>at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.processBatchCallback(HConnectionManager.java:1550)
</span><span class='line'>at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.processBatch(HConnectionManager.java:1413)
</span><span class='line'>at org.apache.hadoop.hbase.client.HTable.flushCommits(HTable.java:949)
</span><span class='line'>at org.apache.hadoop.hbase.client.HTable.doPut(HTable.java:826)
</span><span class='line'>at org.apache.hadoop.hbase.client.HTable.put(HTable.java:801)
</span><span class='line'>at org.apache.hadoop.hbase.client.HTablePool$PooledHTable.put(HTablePool.java:394)
</span><span class='line'>at co.admaster.dmp.superid.utils.HBaseOp.insertData(HBaseOp.java:78)
</span><span class='line'>at co.admaster.dmp.superid.service.impl.SuperIdServiceImpl._insertTypeId(SuperIdServiceImpl.java:141)
</span><span class='line'>at co.admaster.dmp.superid.service.impl.SuperIdServiceImpl.addTwoTypeIds(SuperIdServiceImpl.java:68)
</span><span class='line'>at co.admaster.dmp.superid.test.SuperIdServiceImplTest.addTwoTypeIdsTest(SuperIdServiceImplTest.java:33)
</span><span class='line'>at co.admaster.dmp.superid.test.SuperIdServiceImplTest.main(SuperIdServiceImplTest.java:94)</span></code></pre></td></tr></table></div></figure>


<p>以下是用hbase shell测试，但最后报错，不知什么原因</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hbase(main):004:0&gt; for i in 1..800 do
</span><span class='line'>hbase(main):005:1* put 'chenxj_test',"row#{i}",'family:column',"aaaaaaaaaaaaaaaaaaaaaa#{i}"
</span><span class='line'>hbase(main):006:1&gt; end</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ERROR: java.lang.OutOfMemoryError: unable to create new native thread</span></code></pre></td></tr></table></div></figure>


<h4>修改ulimit设置的最大进程数解决</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[grails让人难受的几点]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/grailsrang-ren-nan-shou-de-ji-dian/"/>
    <updated>2013-11-12T18:40:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/grailsrang-ren-nan-shou-de-ji-dian</id>
    <content type="html"><![CDATA[<p>grails令人难受的几点：</p>

<h4>log差，错误堆栈和真实出错的地方相差太远</h4>

<h4>deploy慢，每次启动项目时间很长</h4>

<p>grails开发效率高，但是因为上面几点问题也会消耗不少时间，
不过grails社区发展地挺不错的，这些地方以后会有很大地提升</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个storm启动包冲突错误]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/stormqi-dong-bao-chong-tu-cuo-wu/"/>
    <updated>2013-11-12T18:39:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/stormqi-dong-bao-chong-tu-cuo-wu</id>
    <content type="html"><![CDATA[<p>storm启动出错,错误信息:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Exception in thread "main" java.lang.VerifyError: class org.codehaus.groovy.runtime.callsite.GroovySunClassLoader$2 overrides final method visit.(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
</span><span class='line'>        at java.lang.ClassLoader.defineClass1(Native Method)
</span><span class='line'>        at java.lang.ClassLoader.defineClass(ClassLoader.java:791)
</span><span class='line'>        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
</span><span class='line'>        at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
</span><span class='line'>        at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
</span><span class='line'>        at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
</span><span class='line'>        at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
</span><span class='line'>        at java.security.AccessController.doPrivileged(Native Method)
</span><span class='line'>        at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
</span><span class='line'>        at java.lang.ClassLoader.loadClass(ClassLoader.java:423)
</span><span class='line'>        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
</span><span class='line'>        at java.lang.ClassLoader.loadClass(ClassLoader.java:356)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.CallSiteGenerator.isCompilable(CallSiteGenerator.java:251)
</span><span class='line'>        at org.codehaus.groovy.reflection.CachedMethod.createStaticMetaMethodSite(CachedMethod.java:284)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.createStaticMetaMethodSite(StaticMetaMethodSite.java:111)
</span><span class='line'>        at groovy.lang.MetaClassImpl.createStaticSite(MetaClassImpl.java:3000)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.CallSiteArray.createCallStaticSite(CallSiteArray.java:59)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.CallSiteArray.createCallSite(CallSiteArray.java:144)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:40)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
</span><span class='line'>        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:124)
</span><span class='line'>        at com.admaster.storm.Config.&lt;clinit&gt;(Config.groovy:13)
</span><span class='line'>        at java.lang.Class.forName0(Native Method)
</span><span class='line'>        at java.lang.Class.forName(Class.java:188)
</span><span class='line'>        at com.admaster.storm.ReceiverTopology.class$(ReceiverTopology.groovy)
</span><span class='line'>        at com.admaster.storm.ReceiverTopology.$get$$class$com$admaster$storm$Config(ReceiverTopology.groovy)
</span><span class='line'>        at com.admaster.storm.ReceiverTopology.main(ReceiverTopology.groovy:20)</span></code></pre></td></tr></table></div></figure>


<pre><code>删掉/opt/storm/lib/asm.jar解决
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nohup命令让进程在后台可靠运行]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/nohupming-ling-rang-jin-cheng-zai-hou-tai-ke-kao-yun-xing/"/>
    <updated>2013-11-12T18:38:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/nohupming-ling-rang-jin-cheng-zai-hou-tai-ke-kao-yun-xing</id>
    <content type="html"><![CDATA[<p>nohup 的用途就是让提交的命令忽略 hangup 信号,用法:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nohup COMMAND [ARG]  &
</span><span class='line'>nohup COMMAND  &gt;filename 2&gt;&1</span></code></pre></td></tr></table></div></figure>


<pre><code>&gt;filename 2&gt;&amp;1 用来更改缺省的重定向文件名
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[浦东图书馆]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/pu-dong-tu-shu-guan/"/>
    <updated>2013-11-12T18:37:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/pu-dong-tu-shu-guan</id>
    <content type="html"><![CDATA[<p>浦东图书馆是个好地方，夏日好，看看书，缓缓归。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cron表达式]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/cronbiao-da-shi/"/>
    <updated>2013-11-12T18:37:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/cronbiao-da-shi</id>
    <content type="html"><![CDATA[<p>cronExpression配置说明:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>字段 允许值 允许的特殊字符
</span><span class='line'>秒 0-59 , - * /
</span><span class='line'>分 0-59 , - * /
</span><span class='line'>小时 0-23 , - * /
</span><span class='line'>日期 1-31 , - * ? / L W C
</span><span class='line'>月份 1-12 或者 JAN-DEC , - * /
</span><span class='line'>星期 1-7 或者 SUN-SAT , - * ? / L C #
</span><span class='line'>年（可选） 留空, 1970-2099 , - * /
</span><span class='line'>表达式 意义
</span><span class='line'>"0 0 12 * * ?" 每天中午12点触发
</span><span class='line'>"0 15 10 ? * *" 每天上午10:15触发
</span><span class='line'>"0 15 10 * * ?" 每天上午10:15触发
</span><span class='line'>"0 15 10 * * ? *" 每天上午10:15触发
</span><span class='line'>"0 15 10 * * ? 2005" 2005年的每天上午10:15触发
</span><span class='line'>"0 * 14 * * ?" 在每天下午2点到下午2:59期间的每1分钟触发
</span><span class='line'>"0 0/5 14 * * ?" 在每天下午2点到下午2:55期间的每5分钟触发
</span><span class='line'>"0 0/5 14,18 * * ?" 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发
</span><span class='line'>"0 0-5 14 * * ?" 在每天下午2点到下午2:05期间的每1分钟触发
</span><span class='line'>"0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发
</span><span class='line'>"0 15 10 ? * MON-FRI" 周一至周五的上午10:15触发
</span><span class='line'>"0 15 10 15 * ?" 每月15日上午10:15触发
</span><span class='line'>"0 15 10 L * ?" 每月最后一日的上午10:15触发
</span><span class='line'>"0 15 10 ? * 6L" 每月的最后一个星期五上午10:15触发
</span><span class='line'>"0 15 10 ? * 6L 2002-2005" 2002年至2005年的每月的最后一个星期五上午10:15触发
</span><span class='line'>"0 15 10 ? * 6#3" 每月的第三个星期五上午10:15触发
</span><span class='line'>特殊字符 意义
</span><span class='line'>* 表示所有值；
</span><span class='line'>? 表示未说明的值，即不关心它为何值；
</span><span class='line'>- 表示一个指定的范围；
</span><span class='line'>, 表示附加一个可能值；
</span><span class='line'>/ 符号前表示开始时间，符号后表示每次递增的值；</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[重要的grails命令]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/zhong-yao-de-grailsming-ling/"/>
    <updated>2013-11-12T18:36:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/zhong-yao-de-grailsming-ling</id>
    <content type="html"><![CDATA[<p>重要的grails命令</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grails integrate-with  --intellij
</span><span class='line'>grails stats
</span><span class='line'>grails create-app
</span><span class='line'>grails create-controller
</span><span class='line'>grails create-domain-class
</span><span class='line'>grails create-filters
</span><span class='line'>grails install-plugin jaxrs 0.6
</span><span class='line'>grails refresh-dependencies
</span><span class='line'>grails list-plugins
</span><span class='line'>grails run-war</span></code></pre></td></tr></table></div></figure>


<p>发布插件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grails install-plugin release 2.0.3
</span><span class='line'>grails publish-plugin --repository=amRepo --allow-overwrite --snapshot</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[grails框架中servlet规范filters执行顺序]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/grailskuang-jia-zhong-servletgui-fan-filterszhi-xing-shun-xu/"/>
    <updated>2013-11-12T18:35:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/grailskuang-jia-zhong-servletgui-fan-filterszhi-xing-shun-xu</id>
    <content type="html"><![CDATA[<p>UrlMappingsFilter 会在其他servlet规范的 filter中间先执行，同时将HttpServletRequest
请求类型由request修改为forward，这样请求流程为：</p>

<p>YourCustomFilter &mdash;> UrlMappingsFilter &mdash;>YourCustomFilter &mdash;> GrailsFilters and Controller</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Throwable的设计]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/throwablede-she-ji/"/>
    <updated>2013-11-12T18:34:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/throwablede-she-ji</id>
    <content type="html"><![CDATA[<p>刚刚看了一下Exception、Error和Throwable的源码，猜想了一下这块的设计，
JDK的API中对Throwable描述：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Throwable 包含了其线程创建时线程执行堆栈的快照。它还包含了给出有关错误更多信息的消息字符串。
</span><span class='line'>最后，它还可以包含 cause（原因）：另一个导致此 throwable 抛出的 throwable。此 cause 设施
</span><span class='line'>在 1.4 版本中首次出现。它也称为异常链 设施，因为 cause 自身也会有 cause，依此类推，就形成了
</span><span class='line'>异常链，每个异常都是由另一个异常引起的。</span></code></pre></td></tr></table></div></figure>


<p>代码可以看到Throwable是链表的结构，高层的异常是由底层的异常导致的，这样就可以找出从高层到底层完整
的异常信息。</p>

<p>Exception和Error的作用主要在于指定它的类型（也就是它是那种Exception或者Error），方法的实现
都是super父类（Throwable）来完成。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mac下启动mysql服务]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/macxia-qi-dong-mysqlfu-wu/"/>
    <updated>2013-11-12T18:34:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/macxia-qi-dong-mysqlfu-wu</id>
    <content type="html"><![CDATA[<p>mac下启动mysql服务</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>shell&gt; sudo /Library/StartupItems/MySQLCOM/MySQLCOM start</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Object对象hashCode和equals方法的意义]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/objectdui-xiang-hashcodehe-equalsfang-fa-de-yi-yi/"/>
    <updated>2013-11-12T18:33:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/objectdui-xiang-hashcodehe-equalsfang-fa-de-yi-yi</id>
    <content type="html"><![CDATA[<p>用于hashMap确定某Key-Value对的存储位置</p>

<p>key.hashCode()用于确定放置在table数组中的哪一个位置上（这个位置其实是一个链表）</p>

<p>key.equals()用于在相同位置（同一链表）上找到正确的key</p>

<p><img src="http://s3.t.itc.cn/mblog/pic/201311_12_18/a1d3216489818615488.jpg"/></p>

<p>注意：对象用作key时最好注意是否需要重写hashCode和equals方法</p>

<p>尽量不要遍历map，人家不是干这个的</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux运维常用命令]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/linuxyun-wei-chang-yong-ming-ling/"/>
    <updated>2013-11-12T18:32:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/linuxyun-wei-chang-yong-ming-ling</id>
    <content type="html"><![CDATA[<h6>############## 系统管理</h6>

<p>CPU运行状态：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat /proc/cpuinfo</span></code></pre></td></tr></table></div></figure>


<h6>############## jvm</h6>

<p>查看线程数：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ps -eLf|grep resin |grep -v grep|wc -l</span></code></pre></td></tr></table></div></figure>


<p>查看堆内存状态：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>jmap -heap pid</span></code></pre></td></tr></table></div></figure>


<p>查看gc情况：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>jstat -gc 31169</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>jstat -gcutil 31169 取样间隔时间(ms) 取样次数</span></code></pre></td></tr></table></div></figure>


<p>gc一般不是每几分钟做一次full gc的话就算正常，我的服务上了一周full gc 142次，
总共full gc时间44.476s</p>

<h6>############## 网络</h6>

<p>查看端口使用：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>netstat -ntlp |grep 2245</span></code></pre></td></tr></table></div></figure>


<p>查看端口连接情况：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>netstat -an |grep 2245</span></code></pre></td></tr></table></div></figure>


<p>查看端口占用的pid：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lsof -i:8080</span></code></pre></td></tr></table></div></figure>


<h6>############## 日志分析</h6>

<p>查看日志的前、后n行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grep -An 'keyword' filename
</span><span class='line'>grep -Bn 'keyword' filename
</span><span class='line'>grep -Cn 'keyword' filename</span></code></pre></td></tr></table></div></figure>


<p>查看日志排除某个字符串</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grep -V</span></code></pre></td></tr></table></div></figure>


<p>查看文件中包含特定字符串：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find 目录 -type f | xargs grep "特定字符串 "</span></code></pre></td></tr></table></div></figure>


<p>日志分析</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat update_all.log |awk ' $16 != 200 {print $16}'|wc -l
</span><span class='line'>cat key.log |sort |uniq -c|sort -n
</span><span class='line'>cat /proc/*/status|grep Thread| awk '{print $2}'|awk '{sum+=$1} END {print "sum=",sum}'</span></code></pre></td></tr></table></div></figure>


<h6>############## 用户</h6>

<p>查看有哪些用户：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat /etc/passwd |awk -F: '{print $1}'</span></code></pre></td></tr></table></div></figure>


<p>修改文件或目录所属的用户：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chown -R 用户:组 目录或文件名</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cornjob每周一次清理zookeeper日志]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/cornjobmei-zhou-qing-li-zookeeperri-zhi/"/>
    <updated>2013-11-12T18:32:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/cornjobmei-zhou-qing-li-zookeeperri-zhi</id>
    <content type="html"><![CDATA[<pre><code>/etc/cron.d/cleanZk
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>0 17 * * Sun root /opt/zookeeper/bin/cleanZk.sh</span></code></pre></td></tr></table></div></figure>


<pre><code>/opt/zookeeper/bin/cleanZk.sh
</code></pre>

<p>&#8220;`
zookeeper_home=&lsquo;/opt/zookeeper/bin/&rsquo;
cd $zookeeper_home
sh ./zkCleanup.sh /opt/zookeeper/data -n 3
echo &lsquo;clean zookeeper ok!&rsquo;
exit 0</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[输出十万以内的素数]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/shu-chu-shi-mo-yi-nei-de-su-shu/"/>
    <updated>2013-11-12T18:31:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/shu-chu-shi-mo-yi-nei-de-su-shu</id>
    <content type="html"><![CDATA[<p>让当场写一段代码输出十万以内的素数，我竟然还问人家什么是素数&hellip; 写的有点问题，最讨厌在纸上写了(~﹏~)</p>

<p>回去重写了一下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>public class Prime {
</span><span class='line'>
</span><span class='line'>    public static void main(String[] args) {
</span><span class='line'>        printPrime();
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    //打印之
</span><span class='line'>    private static void printPrime() {
</span><span class='line'>        for (int i = 1; i &lt;= 100000; i++) {
</span><span class='line'>            if (isPrime(i)) {
</span><span class='line'>                System.out.println(i);
</span><span class='line'>            }
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    //判断之
</span><span class='line'>    private static boolean isPrime(int num) {
</span><span class='line'>        if (num == 1 || num == 2) return true;
</span><span class='line'>        for (int j = 2; j &lt; num; j++) {
</span><span class='line'>            if (num % j == 0)
</span><span class='line'>                return false;
</span><span class='line'>        }
</span><span class='line'>        return true;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搜狐微博OAuth2.0更新并上传了Java版的SDK]]></title>
    <link href="http://xiaojian.me/blog/2013/11/12/sou-hu-wei-bo-oauth2-dot-0geng-xin-bing-shang-chuan-liao-javaban-de-sdk/"/>
    <updated>2013-11-12T18:30:00+08:00</updated>
    <id>http://xiaojian.me/blog/2013/11/12/sou-hu-wei-bo-oauth2-dot-0geng-xin-bing-shang-chuan-liao-javaban-de-sdk</id>
    <content type="html"><![CDATA[<p>SDK传到github上了：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>https://github.com/zephyrGithub/sohutw-java-sdk-2.0.git</span></code></pre></td></tr></table></div></figure>


<p>在twitter4J基础上改了改，暂时没有实现返回集合接口的分页</p>
]]></content>
  </entry>
  
</feed>
